class RandomizedSet {
public:
    vector<int> nums;
    unordered_map<int,int> index;
    /** Initialize your data structure here. */
    RandomizedSet() {
    }
    
    /** Inserts a value to the set. Returns true if the set did not already contain the specified element. */
    bool insert(int val) {
        if(index.count(val))
            return false;
        index[val] = nums.size();
        nums.push_back(val);
        return true;
    }
    
    /** Removes a value from the set. Returns true if the set contained the specified element. */
    bool remove(int val) {
        if(!index.count(val))
            return false;
        int rmIndex=index[val];
        int lastIndex=nums.size()-1;
        nums[rmIndex]=nums[lastIndex];
        index[nums[lastIndex]]=rmIndex;
        index.erase(val);
        nums.pop_back();
        return true;
    }
    
    /** Get a random element from the set. */
    int getRandom() {
        return nums[rand() % nums.size()];
    }
};
