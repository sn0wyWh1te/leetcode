class Solution {
public:
    string minWindow(string s, string t) {
        unordered_map<char,int> needed,window;
        for(char c:t)
        {
            needed[c]++;
        }

        int left=0,right=0;
        int valid=0;

        int start=0,len=INT_MAX;

        while(right<s.size())
        {
            char c=s[right];
            right++;
            if(needed.count(c))
            {
                window[c]++;
                if(window[c]==needed[c])
                {
                    valid++;
                }
            }

            while(valid==needed.size())
            {
                if(right-left<len)
                {
                    start=left;
                    len=right-left;
                }
                char d=s[left];
                left++;
                if(needed.count(d))
                {
                    if(window[d]==needed[d])
                    {
                        valid--;
                    }
                    window[d]--;
                }
            }
        }
        return len==INT_MAX?"":string(&s[start],len);
    }
};
