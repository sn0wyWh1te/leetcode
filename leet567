class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        unordered_map<char,int> needed,window;
        for(char c:s1)
        {
            needed[c]++;
        }

        int left=0,right=0,valid=0;
        while(right<s2.size())
        {
            char c=s2[right];
            right++;
            if(needed.count(c))
            {
                window[c]++;
                if(window[c]==needed[c])
                {
                    valid++;
                }
            }

            while(right-left>=s1.size())
            {
                if(valid==needed.size())
                    return true;
                char d=s2[left];
                left++;
                if(needed.count(d))
                {
                    if(window[d]==needed[d])
                        valid--;
                    window[d]--;
                }
            }
        }
        return false;
    }
};
